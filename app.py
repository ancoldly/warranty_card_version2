import streamlit as st
from docxtpl import DocxTemplate
from jinja2 import Environment
import pytz
from datetime import datetime
import tempfile
from docx2pdf import convert
import base64
import os
import pythoncom

st.set_page_config(page_title="Phi·∫øu b·∫£o h√†nh - Tu·∫•n Anh", layout="centered")

st.title("üìÑ Phi·∫øu B·∫£o H√†nh - C·ª≠a h√†ng ƒëi·ªán tho·∫°i Tu·∫•n Anh")

# Kh·ªüi t·∫°o session_state ƒë·ªÉ l∆∞u file
if "docx_file" not in st.session_state:
    st.session_state.docx_file = None
if "pdf_file" not in st.session_state:
    st.session_state.pdf_file = None

# Nh·∫≠p th√¥ng tin kh√°ch h√†ng
st.subheader("Th√¥ng tin kh√°ch h√†ng")
customer = st.text_input("üë§ T√™n kh√°ch h√†ng")
phone = st.text_input("üìû S·ªë ƒëi·ªán tho·∫°i")
address = st.text_input("üè† ƒê·ªãa ch·ªâ")

# Ng√†y gi·ªù
tz = pytz.timezone('Asia/Ho_Chi_Minh')
now = datetime.now(tz)
date = now.strftime("%d/%m/%Y %H:%M:%S")

# Th√¥ng tin s·∫£n ph·∫©m
st.subheader("Th√¥ng tin s·∫£n ph·∫©m")
info_product = st.text_area("üì± T√™n h√†ng h√≥a (c√≥ th·ªÉ xu·ªëng d√≤ng)", height=150)
quantity = st.number_input("S·ªë l∆∞·ª£ng", min_value=1, step=1)
price = st.number_input("ƒê∆°n gi√°", min_value=0.0, step=1000.0, format="%.0f")
discount = st.number_input("Chi·∫øt kh·∫•u", min_value=0.0, step=1000.0, format="%.0f")
vat = st.number_input("VAT", min_value=0.0, step=1000.0, format="%.0f")

# T√≠nh t·ªïng
subtotal = price * quantity
total = subtotal - discount + vat

# Filter nl2br (n·∫øu d√πng trong template)
def nl2br(value):
    if not value:
        return ""
    return value.replace('\n', '\n')

jinja_env = Environment()
jinja_env.filters['nl2br'] = nl2br

# N√∫t t·∫°o phi·∫øu
if st.button("üìÑ T·∫°o phi·∫øu b·∫£o h√†nh"):
    with tempfile.NamedTemporaryFile(delete=False, suffix=".docx") as tmp_docx:
        doc = DocxTemplate("template_with_placeholders.docx")  # file template
        context = {
            "date": date,
            "customer": customer,
            "phone": phone,
            "address": address,
            "info_product": info_product,
            "quantity": quantity,
            "price": f"{price:,.0f} VNƒê",
            "discount": f"{discount:,.0f} VNƒê",
            "vat": f"{vat:,.0f} VNƒê",
            "total": f"{total:,.0f} VNƒê",
            "stt": 1
        }
        doc.render(context, jinja_env=jinja_env)
        doc.save(tmp_docx.name)
        st.session_state.docx_file = tmp_docx.name  # L∆∞u v√†o session_state

    # Chuy·ªÉn sang PDF
    pdf_path = tmp_docx.name.replace(".docx", ".pdf")
    try:
        pythoncom.CoInitialize()
        convert(tmp_docx.name, pdf_path)
        pythoncom.CoUninitialize()
        st.session_state.pdf_file = pdf_path  # L∆∞u PDF v√†o session_state
        pdf_available = True
    except Exception as e:
        st.error(f"L·ªói khi chuy·ªÉn sang PDF: {e}")
        pdf_available = False

    st.success("‚úÖ T·∫°o phi·∫øu th√†nh c√¥ng!")

# --- Hi·ªÉn th·ªã n√∫t t·∫£i v√† PDF d·ª±a tr√™n session_state ---

# T·∫£i DOCX
if st.session_state.docx_file and os.path.exists(st.session_state.docx_file):
    with open(st.session_state.docx_file, "rb") as file_docx:
        st.download_button(
            label="‚¨áÔ∏è T·∫£i xu·ªëng phi·∫øu (DOCX)",
            data=file_docx,
            file_name=f"{phone}.docx",
            mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
        )

# T·∫£i PDF + hi·ªÉn th·ªã PDF
if st.session_state.pdf_file and os.path.exists(st.session_state.pdf_file):
    with open(st.session_state.pdf_file, "rb") as file_pdf:
        st.download_button(
            label="‚¨áÔ∏è T·∫£i xu·ªëng phi·∫øu (PDF)",
            data=file_pdf,
            file_name=f"{phone}.pdf",
            mime="application/pdf"
        )

    # Hi·ªÉn th·ªã PDF trong iframe
    with open(st.session_state.pdf_file, "rb") as f:
        base64_pdf = base64.b64encode(f.read()).decode('utf-8')
    pdf_display = f'<iframe src="data:application/pdf;base64,{base64_pdf}" width="100%" height="600"></iframe>'
    st.markdown(pdf_display, unsafe_allow_html=True)
